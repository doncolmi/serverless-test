service: soccer
frameworkVersion: "2"

package:
  include:
    - src

plugins:
  - serverless-offline
  - serverless-api-compression

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 30
  region: ap-northeast-2
  environment:
    NODE_ENV: development

custom:
  contentCompression: 256

functions:
  # auth.js
  login:
    handler: src/auth.login
    events:
      - http:
          path: v1/auth/login
          method: get
  chkName:
    handler: src/auth.chkName
    events:
      - http:
          path: v1/auth/name
          method: get
          request:
            parameters:
              querystrings:
                name: true
  chgName:
    handler: src/auth.chgName
    events:
      - http:
          path: v1/auth/name
          method: patch
  ExitUser:
    handler: src/auth.ExitUser
    events:
      - http:
          path: v1/auth
          method: delete
  # crawling.js
  crwaling:
    handler: src/crawling.newsCrawling
    events:
      - http:
          path: /v1/crwaling
          method: get
  goalContents:
    handler: src/crawling.goalContents
    events:
      - http:
          path: /v1/news/{newsId}/goal
          method: post
          request:
            parameters:
              paths:
                newsId: true
  guardianContents:
    handler: src/crawling.guardianContents
    events:
      - http:
          path: /v1/news/{newsId}/guardian
          method: post
          request:
            parameters:
              paths:
                newsId: true
  bbcContents:
    handler: src/crawling.bbcContents
    events:
      - http:
          path: /v1/news/{newsId}/bbc
          method: post
          request:
            parameters:
              paths:
                newsId: true
  # sync.js
  syncDB:
    handler: src/sync.syncDB
    events:
      - http:
          path: v1/sync
          method: get
  # news.js
  countAllNews:
    handler: src/news.countAllNews
    events:
      - http:
          path: v1/news/cnt
          method: get
  getRecentNews:
    handler: src/news.getRecentNews
    events:
      - http:
          path: v1/news/recent
          method: get
  getNewsList:
    handler: src/news.getNewsList
    events:
      - http:
          path: v1/news
          method: get
          request:
            parameters:
              querystrings:
                page: false
  getNews:
    handler: src/news.getNews
    events:
      - http:
          path: v1/news/{newsId}
          method: get
          request:
            parameters:
              paths:
                newsId: true
  getNewsUserLink:
    handler: src/news.getNewsUserLink
    events:
      - http:
          path: /v1/news/{newsId}/link
          method: get
          request:
            parameters:
              paths:
                newsId: true
  getNewsContents:
    handler: src/news.getNewsContents
    events:
      - http:
          path: /v1/news/{newsId}/score
          method: get
          request:
            parameters:
              paths:
                newsId: true
  postNewsScore:
    handler: src/news.postNewsScore
    events:
      - http:
          path: /v1/news/{newsId}/score
          method: post
          request:
            parameters:
              paths:
                newsId: true
  # newsReply.js
  getReplyCnt:
    handler: src/newsReply.getReplyCnt
    events:
      - http:
          path: v1/news/{newsId}/reply/cnt
          method: get
          request:
            parameters:
              paths:
                newsId: true
  getReply:
    handler: src/newsReply.getReply
    events:
      - http:
          path: v1/news/{newsId}/reply
          method: get
          request:
            parameters:
              paths:
                newsId: true
  postReply:
    handler: src/newsReply.postReply
    events:
      - http:
          path: v1/news/reply
          method: post
  patchReply:
    handler: src/newsReply.patchReply
    events:
      - http:
          path: v1/news/reply
          method: patch
  deleteReply:
    handler: src/newsReply.deleteReply
    events:
      - http:
          path: v1/news/reply/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true
  getReplyScore:
    handler: src/newsReply.getReplyScore
    events:
      - http:
          path: /v1/reply/{id}/score
          method: get
          request:
            parameters:
              paths:
                id: true
  replyScore:
    handler: src/newsReply.replyScore
    events:
      - http:
          path: /v1/news/reply/score
          method: post
